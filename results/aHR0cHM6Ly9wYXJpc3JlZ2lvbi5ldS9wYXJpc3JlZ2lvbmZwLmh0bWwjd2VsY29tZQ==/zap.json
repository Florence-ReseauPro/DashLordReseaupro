{
	"@version": "2.11.0",
	"@generated": "Sun, 21 Nov 2021 01:00:36",
	"site":[ 
		{
			"@name": "https://parisregion.eu",
			"@host": "parisregion.eu",
			"@port": "443",
			"@ssl": "true",
			"alerts": [ 
				{
					"pluginid": "10038",
					"alertRef": "10038",
					"alert": "Content Security Policy (CSP) Header Not Set",
					"name": "Content Security Policy (CSP) Header Not Set",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/search-project.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						}
					],
					"count": "10",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: \"Content-Security-Policy\" for Chrome 25+, Firefox 23+ and Safari 7+, \"X-Content-Security-Policy\" for Firefox 4.0+ and Internet Explorer 10+, and \"X-WebKit-CSP\" for Chrome 14+ and Safari 6+.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy</p><p>https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html</p><p>http://www.w3.org/TR/CSP/</p><p>http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html</p><p>http://www.html5rocks.com/en/tutorials/security/content-security-policy/</p><p>http://caniuse.com/#feat=contentsecuritypolicy</p><p>http://content-security-policy.com/</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "3"
				},
				{
					"pluginid": "10042",
					"alertRef": "10042",
					"alert": "HTTPS to HTTP Insecure Transition in Form Post",
					"name": "HTTPS to HTTP Insecure Transition in Form Post",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>This check identifies secure HTTPS pages that host insecure HTTP forms. The issue is that a secure page is transitioning to an insecure page when data is uploaded through a form. The user may think they're submitting data to a secure page when in fact they are not.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						}
					],
					"count": "4",
					"solution": "<p>Ensure sensitive data is only sent over secured HTTPS channels.</p>",
					"otherinfo": "<p>The response to the following request over HTTPS included an HTTP form tag action attribute value:</p><p></p><p>https://parisregion.eu/discover.htmlThe context was:</p><p></p><p><form action=\"http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&amp;id=94f8a2a3bd\"</p><p>      method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate></p><p>    <div id=\"mc_embed_signup_scroll\"></p><p>        <p class=\"lead\"></p><p>          Stay informed with the latest news and information from Paris Region</p><p>        </p></p><p>        <div class=\"indicates-required\"><span class=\"asterisk\">*</span> indicates required</div></p><p>        <div class=\"mc-field-group\"></p><p>            <label for=\"mce-EMAIL\">Email Address  <span class=\"asterisk\">*</span></label></p><p>            <input type=\"email\" value=\"\" name=\"EMAIL\" class=\"required email\" id=\"mce-EMAIL\"></p><p>        </div></p><p>        <div class=\"mc-field-group\"></p><p>            <label for=\"mce-MMERGE3\">Country  <span class=\"asterisk\">*</span></label></p><p>            <input type=\"text\" value=\"\" name=\"MMERGE3\" class=\"required\" id=\"mce-MMERGE3\"></p><p>        </div></p><p>        <div id=\"mce-responses\" class=\"clear\"></p><p>            <div class=\"response\" id=\"mce-error-response\" style=\"display:none\"></div></p><p>            <div class=\"response\" id=\"mce-success-response\" style=\"display:none\"></div></p><p>        </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--></p><p>        <div style=\"position: absolute; left: -5000px;\" aria-hidden=\"true\"><input type=\"text\" name=\"b_c16c58b40e9d106fbe4300426_94f8a2a3bd\" tabindex=\"-1\" value=\"\"></div></p><p>        <div class=\"clear\"><input type=\"submit\" value=\"Subscribe\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"button\"></div></p><p>    </div></p><p>  </form></p>",
					"reference": "",
					"cweid": "319",
					"wascid": "15",
					"sourceid": "39"
				},
				{
					"pluginid": "10108",
					"alertRef": "10108",
					"alert": "Reverse Tabnabbing",
					"name": "Reverse Tabnabbing",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>At least one link on this page is vulnerable to Reverse tabnabbing as it uses a target attribute without using both of the \"noopener\" and \"noreferrer\" keywords in the \"rel\" attribute, which allows the target page to take control of this page.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/b3conference.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/search-project.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a href=\"https://www.chooseparisregion.org/\" target=\"_blank\">Invest</a>"
						}
					],
					"count": "8",
					"solution": "<p>Do not use a target attribute, or if you have to then also add the attribute: rel=\"noopener noreferrer\".</p>",
					"otherinfo": "",
					"reference": "<p>https://owasp.org/www-community/attacks/Reverse_Tabnabbing</p><p>https://dev.to/ben/the-targetblank-vulnerability-by-example</p><p>https://mathiasbynens.github.io/rel-noopener/</p><p>https://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c</p>",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "3"
				},
				{
					"pluginid": "90003",
					"alertRef": "90003",
					"alert": "Sub Resource Integrity Attribute Missing",
					"name": "Sub Resource Integrity Attribute Missing",
					"riskcode": "2",
					"confidence": "3",
					"riskdesc": "Medium (High)",
					"desc": "<p>The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content. </p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						}
					],
					"count": "8",
					"solution": "<p>Provide a valid integrity attribute to the tag.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en/docs/Web/Security/Subresource_Integrity</p>",
					"cweid": "345",
					"wascid": "15",
					"sourceid": "3"
				},
				{
					"pluginid": "10003",
					"alertRef": "10003",
					"alert": "Vulnerable JS Library",
					"name": "Vulnerable JS Library",
					"riskcode": "2",
					"confidence": "2",
					"riskdesc": "Medium (Medium)",
					"desc": "<p>The identified library bootstrap, version 3.3.7 is vulnerable.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/js/bootstrap.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "* Bootstrap v3.3.7"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "/*! jQuery v1.12.4"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "/*! jQuery v1.12.4"
						}
					],
					"count": "3",
					"solution": "<p>Please upgrade to the latest version of bootstrap.</p>",
					"otherinfo": "<p>CVE-2019-8331</p><p>CVE-2018-14041</p><p>CVE-2018-14040</p><p>CVE-2018-14042</p><p></p>",
					"reference": "<p>https://github.com/twbs/bootstrap/issues/28236</p><p>https://github.com/twbs/bootstrap/issues/20184</p><p></p>",
					"cweid": "829",
					"wascid": "-1",
					"sourceid": "169"
				},
				{
					"pluginid": "10202",
					"alertRef": "10202",
					"alert": "Absence of Anti-CSRF Tokens",
					"name": "Absence of Anti-CSRF Tokens",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>No Anti-CSRF tokens were found in a HTML submission form.</p><p>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.</p><p></p><p>CSRF attacks are effective in a number of situations, including:</p><p>    * The victim has an active session on the target site.</p><p>    * The victim is authenticated via HTTP auth on the target site.</p><p>    * The victim is on the same local network as the target site.</p><p></p><p>CSRF has primarily been used to perform an action against a target site using the victim's privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<form action=\"http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&amp;id=94f8a2a3bd\"\n      method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<form action=\"http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&amp;id=94f8a2a3bd\"\n      method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<form action=\"http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&amp;id=94f8a2a3bd\"\n                method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<form action=\"http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&amp;id=94f8a2a3bd\"\n                method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate\" target=\"_blank\" novalidate>"
						}
					],
					"count": "4",
					"solution": "<p>Phase: Architecture and Design</p><p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.</p><p>For example, use anti-CSRF packages such as the OWASP CSRFGuard.</p><p></p><p>Phase: Implementation</p><p>Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.</p><p></p><p>Phase: Architecture and Design</p><p>Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.</p><p>Note that this can be bypassed using XSS.</p><p></p><p>Use the ESAPI Session Management control.</p><p>This control includes a component for CSRF.</p><p></p><p>Do not use the GET method for any request that triggers a state change.</p><p></p><p>Phase: Implementation</p><p>Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.</p>",
					"otherinfo": "<p>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: \"b_c16c58b40e9d106fbe4300426_94f8a2a3bd\" \"mc-embedded-subscribe\" \"mce-EMAIL\" \"mce-MMERGE3\" ].</p>",
					"reference": "<p>http://projects.webappsec.org/Cross-Site-Request-Forgery</p><p>http://cwe.mitre.org/data/definitions/352.html</p>",
					"cweid": "352",
					"wascid": "9",
					"sourceid": "39"
				},
				{
					"pluginid": "10017",
					"alertRef": "10017",
					"alert": "Cross-Domain JavaScript Source File Inclusion",
					"name": "Cross-Domain JavaScript Source File Inclusion",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The page includes one or more script files from a third-party domain.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "https://oss.maxcdn.com/respond/1.4.2/respond.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/respond/1.4.2/respond.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/respond/1.4.2/respond.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "https://oss.maxcdn.com/respond/1.4.2/respond.min.js",
							"attack": "",
							"evidence": "<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>"
						}
					],
					"count": "8",
					"solution": "<p>Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.</p>",
					"otherinfo": "",
					"reference": "",
					"cweid": "829",
					"wascid": "15",
					"sourceid": "3"
				},
				{
					"pluginid": "10110",
					"alertRef": "10110",
					"alert": "Dangerous JS Functions",
					"name": "Dangerous JS Functions",
					"riskcode": "1",
					"confidence": "1",
					"riskdesc": "Low (Low)",
					"desc": "<p>A dangerous JS function seems to be in use that would leave the site vulnerable.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/bower_components/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "eval"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "eval"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "eval"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "eval"
						}
					],
					"count": "4",
					"solution": "<p>See the references for security advice on the use of these functions.</p>",
					"otherinfo": "",
					"reference": "<p>https://angular.io/guide/security</p>",
					"cweid": "749",
					"wascid": "-1",
					"sourceid": "175"
				},
				{
					"pluginid": "10015",
					"alertRef": "10015",
					"alert": "Incomplete or No Cache-control Header Set",
					"name": "Incomplete or No Cache-control Header Set",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/b3conference.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/search-project.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "Cache-Control",
							"attack": "",
							"evidence": "max-age=0"
						}
					],
					"count": "9",
					"solution": "<p>Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate.</p>",
					"otherinfo": "",
					"reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching</p><p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</p>",
					"cweid": "525",
					"wascid": "13",
					"sourceid": "3"
				},
				{
					"pluginid": "10063",
					"alertRef": "10063",
					"alert": "Permissions Policy Header Not Set",
					"name": "Permissions Policy Header Not Set",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/js/bootstrap.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						}
					],
					"count": "10",
					"solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.</p>",
					"otherinfo": "",
					"reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy</p><p>https://developers.google.com/web/updates/2018/06/feature-policy</p><p>https://scotthelme.co.uk/a-new-security-header-feature-policy/</p><p>https://w3c.github.io/webappsec-feature-policy/</p><p>https://www.smashingmagazine.com/2018/12/feature-policy/</p>",
					"cweid": "693",
					"wascid": "15",
					"sourceid": "3"
				},
				{
					"pluginid": "10040",
					"alertRef": "10040",
					"alert": "Secure Pages Include Mixed Content",
					"name": "Secure Pages Include Mixed Content",
					"riskcode": "1",
					"confidence": "2",
					"riskdesc": "Low (Medium)",
					"desc": "<p>The page includes mixed content, that is content accessed via HTTP instead of HTTPS.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://internationaleducation.parisregion.eu/?lang=en"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd"
						}
					],
					"count": "4",
					"solution": "<p>A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.</p><p>The page must not contain any content that is transmitted over unencrypted HTTP.</p><p> This includes content from third party sites.</p>",
					"otherinfo": "<p>tag=form action=http://iledefrance.us12.list-manage.com/subscribe/post?u=c16c58b40e9d106fbe4300426&id=94f8a2a3bd</p><p></p>",
					"reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html</p>",
					"cweid": "311",
					"wascid": "4",
					"sourceid": "39"
				},
				{
					"pluginid": "10096",
					"alertRef": "10096",
					"alert": "Timestamp Disclosure - Unix",
					"name": "Timestamp Disclosure - Unix",
					"riskcode": "1",
					"confidence": "1",
					"riskdesc": "Low (Low)",
					"desc": "<p>A timestamp was disclosed by the application/web server - Unix</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/css/bootstrap.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "00000000"
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/css/bootstrap.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33333333"
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/css/bootstrap.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "42857143"
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/css/bootstrap.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "66666667"
						},
						{
							"uri": "https://parisregion.eu/bower_components/bootstrap/dist/css/bootstrap.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "80000000"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "33696000"
						}
					],
					"count": "11",
					"solution": "<p>Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.</p>",
					"otherinfo": "<p>33696000, which evaluates to: 1971-01-26 00:00:00</p>",
					"reference": "<p>http://projects.webappsec.org/w/page/13246936/Information%20Leakage</p>",
					"cweid": "200",
					"wascid": "13",
					"sourceid": "3"
				},
				{
					"pluginid": "10094",
					"alertRef": "10094",
					"alert": "Base64 Disclosure",
					"name": "Base64 Disclosure",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>Base64 encoded data was disclosed by the application/web server. Note: in the interests of performance not all base64 strings in the response were analyzed individually, the entire response should be looked at by the analyst/security team/developer(s).</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/b3conference.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "img/b3conference/Logo-ridf-couleur"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery.mb.ytplayer/dist/css/jquery.mb.YTPlayer.min.css",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "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"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "D27CDB6E-AE6D-11cf-96B8-444553540000"
						},
						{
							"uri": "https://parisregion.eu/img/welcome/valerie_pecresse500.jpg",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "org/std/Iptc4xmpExt/2008-02-29/"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "iVBORw0KGgoAAAANSUhEUgAAAHcAAAAeCAYAAAAWwoEYAAADl0lEQVRoge1Y0W3bQAx9CjKARlC+9GVUmqDJBHEmiDyB6wkcTxBngtgTxJ0gzgQW4C/9aYOmE6g4lTQo+k6y3Rb94QOERNQd+cjj8XiGwWAwGAwGg8FgMBgMBoPB8F8RNRXe+whEKe7c36ZCAeCRxC9Rig2PUd8kPgAsoxSfQ3YAzAA8D/HwYYCb05kBKKO0teFkmbC1jlKsAnq/Abjn+QBqAIsoRS30ttwG/HNz1wH/XIxWTicLdvtW7xTAGEAMtP685CNsBTe2d/BLydfXAG57SEnMAST0zgYZSUCPk02bCvkJduIzuJzDLfPolbY+tLKmar+/8+IRePy4qdpE03qHuH8fipFb4N2+XdA3AJ/0vaQxt7s9FvkIS2XvtqnwM0rxpOQfbnE5G2LhTCmUO2fHIngOmcv+KG3HafDchB6ntwjYqenR2PqC7sOZ3E7FXHB0vqxoFyUyLh7OEH7LOGouvhhN3eIBeKXv0n5MsufdHqXcwYR5U2EbpV35lSspVPJmQj4TcgRK7jTg5IzmPUhhwM5a2WHUFCx+NgiDucmgh7idikLovHFlL0pxQ9xzX+IIP9Y6FrJsqhjlQpZRAkFVDCjZfcCHt6bqJDmuh5ylCWx0RVnk3oumaknqTH5sqrY0fBWyULaHUIgAgxb46MxV3DbieAhxOxUxjSuljig9lMQ/Bcfoi9BTEv9aLORSndVxYOH525sUDC6u2gWxcNzBNRxPanyh3ktKinOgy3WoxPbtUM0t6RkbQnzBnFPgi9GCOEubY9UffIryz9iKRe8s/FUfEWosJJGxagp85bpUO3VywQ46lOtAWfNxKwa4JXQ+628+bpxYGXXMzp5rXH401VEyXwIdowXFaKWSMFHvMTVmGnc+P3oXV2QOiBCfgex8QtcQCbcQE/H+eoHzrkFo1KM7zVO4jVVj5s6lRiWF7zyXyfRMc97J3tzj87mYqZ7E2YjzUct9GUi4tjHLR8dVkBLjQcuHFleWvQfRNEhFR7uX7pkctOwvZXsft7sAtyldEUIN2UTeLxnEfxKYswzdi88BdbZ8hifUoSMftQvP+muRwN6+Q3DeqqRExP9QmTtcheiHh0Ot1x2i2km1bP9pbufw5zZdyWsOrh7vQae5OZWbsMv30pi7cd/CKj3coPEVaCP4Zhx4eQWhOZ1Y9MTXGyP8/iGjEyfa1T4fO/4Lea9vBoPBYDAYDAaDwWAwGAwGwz8GgF8siXCCbrSRhgAAAABJRU5ErkJggg=="
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "D27CDB6E-AE6D-11cf-96B8-444553540000"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "com/ressources/actualite/600x189xPanorama_Village_global_Sensual_City_Studio"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "pdf/20200630_Prfp_DMI-laboratories"
						},
						{
							"uri": "https://parisregion.eu/pdf/20200630_Prfp_DMI-laboratories.xls",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "877D93EC-0EFA-40ac-8DA6-3AB56D48C5D3UU"
						},
						{
							"uri": "https://parisregion.eu/pdf/h2020_hi_ethics-self-assess_en.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "/Type/Font/Subtype/TrueType/Name/F1/BaseFont/ABCDEE+Verdana/Encoding/WinAnsiEncoding/FontDescriptor"
						},
						{
							"uri": "https://parisregion.eu/pdf/PRfP_Short-Guide-2nd-call_2021_VF.pdf",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "/Type/Font/Subtype/TrueType/Name/F1/BaseFont/BCDEEE+Verdana/Encoding/WinAnsiEncoding/FontDescriptor"
						}
					],
					"count": "11",
					"solution": "<p>Manually confirm that the Base64 data does not leak sensitive information, and that the data cannot be aggregated/used to exploit other vulnerabilities.</p>",
					"otherinfo": "<p>\uFFFDh?ow(\uFFFD\uFFFD\uFFFDzw\\x001e\uFFFD\uFFFD \uFFFD\uFFFD\uFFFDu\uFFFD\uFFFD\uFFFD\uFFFD^\uFFFD</p>",
					"reference": "<p>http://projects.webappsec.org/w/page/13246936/Information%20Leakage</p>",
					"cweid": "200",
					"wascid": "13",
					"sourceid": "275"
				},
				{
					"pluginid": "10027",
					"alertRef": "10027",
					"alert": "Information Disclosure - Suspicious Comments",
					"name": "Information Disclosure - Suspicious Comments",
					"riskcode": "0",
					"confidence": "1",
					"riskdesc": "Informational (Low)",
					"desc": "<p>The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/bower_components/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "user"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "db"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "select"
						},
						{
							"uri": "https://parisregion.eu/bower_components/owl/owl-carousel/owl.carousel.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "select"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "from"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "query"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "TODO"
						},
						{
							"uri": "https://parisregion.eu/js/tarteaucitron/tarteaucitron.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "user"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "db"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "from"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "query"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "SELECT"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "TODO"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "user"
						}
					],
					"count": "14",
					"solution": "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
					"otherinfo": "<p>The following pattern was used: \\bUSER\\b and was detected in the element starting with: \"d.marginLeft=0;break;case\"right\":d.marginLeft=i?-(d.width-g.width):0}}}else d.width=\"100%\",d.height=\"100%\",d.marginTop=0,d.margi\", see evidence field for the suspicious comment/snippet.</p>",
					"reference": "",
					"cweid": "200",
					"wascid": "13",
					"sourceid": "175"
				},
				{
					"pluginid": "10109",
					"alertRef": "10109",
					"alert": "Modern Web Application",
					"name": "Modern Web Application",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery.mb.ytplayer/dist/jquery.mb.YTPlayer.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script></script>"
						},
						{
							"uri": "https://parisregion.eu/bower_components/jquery/dist/jquery.min.js",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a id='\"+u+\"'></a>"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/map.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<script>(function() {\n  // If window.HTMLWidgets is already defined, then use it; otherwise create a\n  // new object. This allows preceding code to set options that affect the\n  // initialization process (though none currently exist).\n  window.HTMLWidgets = window.HTMLWidgets || {};\n\n  // See if we're running in a viewer pane. If not, we're in a web browser.\n  var viewerMode = window.HTMLWidgets.viewerMode =\n      /\\bviewer_pane=1\\b/.test(window.location);\n\n  // See if we're running in Shiny mode. If not, it's a static document.\n  // Note that static widgets can appear in both Shiny and static modes, but\n  // obviously, Shiny widgets can only appear in Shiny apps/documents.\n  var shinyMode = window.HTMLWidgets.shinyMode =\n      typeof(window.Shiny) !== \"undefined\" && !!window.Shiny.outputBindings;\n\n  // We can't count on jQuery being available, so we implement our own\n  // version if necessary.\n  function querySelectorAll(scope, selector) {\n    if (typeof(jQuery) !== \"undefined\" && scope instanceof jQuery) {\n      return scope.find(selector);\n    }\n    if (scope.querySelectorAll) {\n      return scope.querySelectorAll(selector);\n    }\n  }\n\n  function asArray(value) {\n    if (value === null)\n      return [];\n    if ($.isArray(value))\n      return value;\n    return [value];\n  }\n\n  // Implement jQuery's extend\n  function extend(target /*, ... */) {\n    if (arguments.length == 1) {\n      return target;\n    }\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          target[prop] = source[prop];\n        }\n      }\n    }\n    return target;\n  }\n\n  // IE8 doesn't support Array.forEach.\n  function forEach(values, callback, thisArg) {\n    if (values.forEach) {\n      values.forEach(callback, thisArg);\n    } else {\n      for (var i = 0; i < values.length; i++) {\n        callback.call(thisArg, values[i], i, values);\n      }\n    }\n  }\n\n  // Replaces the specified method with the return value of funcSource.\n  //\n  // Note that funcSource should not BE the new method, it should be a function\n  // that RETURNS the new method. funcSource receives a single argument that is\n  // the overridden method, it can be called from the new method. The overridden\n  // method can be called like a regular function, it has the target permanently\n  // bound to it so \"this\" will work correctly.\n  function overrideMethod(target, methodName, funcSource) {\n    var superFunc = target[methodName] || function() {};\n    var superFuncBound = function() {\n      return superFunc.apply(target, arguments);\n    };\n    target[methodName] = funcSource(superFuncBound);\n  }\n\n  // Add a method to delegator that, when invoked, calls\n  // delegatee.methodName. If there is no such method on\n  // the delegatee, but there was one on delegator before\n  // delegateMethod was called, then the original version\n  // is invoked instead.\n  // For example:\n  //\n  // var a = {\n  //   method1: function() { console.log('a1'); }\n  //   method2: function() { console.log('a2'); }\n  // };\n  // var b = {\n  //   method1: function() { console.log('b1'); }\n  // };\n  // delegateMethod(a, b, \"method1\");\n  // delegateMethod(a, b, \"method2\");\n  // a.method1();\n  // a.method2();\n  //\n  // The output would be \"b1\", \"a2\".\n  function delegateMethod(delegator, delegatee, methodName) {\n    var inherited = delegator[methodName];\n    delegator[methodName] = function() {\n      var target = delegatee;\n      var method = delegatee[methodName];\n\n      // The method doesn't exist on the delegatee. Instead,\n      // call the method on the delegator, if it exists.\n      if (!method) {\n        target = delegator;\n        method = inherited;\n      }\n\n      if (method) {\n        return method.apply(target, arguments);\n      }\n    };\n  }\n\n  // Implement a vague facsimilie of jQuery's data method\n  function elementData(el, name, value) {\n    if (arguments.length == 2) {\n      return el[\"htmlwidget_data_\" + name];\n    } else if (arguments.length == 3) {\n      el[\"htmlwidget_data_\" + name] = value;\n      return el;\n    } else {\n      throw new Error(\"Wrong number of arguments for elementData: \" +\n        arguments.length);\n    }\n  }\n\n  // http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n  function escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n  }\n\n  function hasClass(el, className) {\n    var re = new RegExp(\"\\\\b\" + escapeRegExp(className) + \"\\\\b\");\n    return re.test(el.className);\n  }\n\n  // elements - array (or array-like object) of HTML elements\n  // className - class name to test for\n  // include - if true, only return elements with given className;\n  //   if false, only return elements *without* given className\n  function filterByClass(elements, className, include) {\n    var results = [];\n    for (var i = 0; i < elements.length; i++) {\n      if (hasClass(elements[i], className) == include)\n        results.push(elements[i]);\n    }\n    return results;\n  }\n\n  function on(obj, eventName, func) {\n    if (obj.addEventListener) {\n      obj.addEventListener(eventName, func, false);\n    } else if (obj.attachEvent) {\n      obj.attachEvent(eventName, func);\n    }\n  }\n\n  function off(obj, eventName, func) {\n    if (obj.removeEventListener)\n      obj.removeEventListener(eventName, func, false);\n    else if (obj.detachEvent) {\n      obj.detachEvent(eventName, func);\n    }\n  }\n\n  // Translate array of values to top/right/bottom/left, as usual with\n  // the \"padding\" CSS property\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/padding\n  function unpackPadding(value) {\n    if (typeof(value) === \"number\")\n      value = [value];\n    if (value.length === 1) {\n      return {top: value[0], right: value[0], bottom: value[0], left: value[0]};\n    }\n    if (value.length === 2) {\n      return {top: value[0], right: value[1], bottom: value[0], left: value[1]};\n    }\n    if (value.length === 3) {\n      return {top: value[0], right: value[1], bottom: value[2], left: value[1]};\n    }\n    if (value.length === 4) {\n      return {top: value[0], right: value[1], bottom: value[2], left: value[3]};\n    }\n  }\n\n  // Convert an unpacked padding object to a CSS value\n  function paddingToCss(paddingObj) {\n    return paddingObj.top + \"px \" + paddingObj.right + \"px \" + paddingObj.bottom + \"px \" + paddingObj.left + \"px\";\n  }\n\n  // Makes a number suitable for CSS\n  function px(x) {\n    if (typeof(x) === \"number\")\n      return x + \"px\";\n    else\n      return x;\n  }\n\n  // Retrieves runtime widget sizing information for an element.\n  // The return value is either null, or an object with fill, padding,\n  // defaultWidth, defaultHeight fields.\n  function sizingPolicy(el) {\n    var sizingEl = document.querySelector(\"script[data-for='\" + el.id + \"'][type='application/htmlwidget-sizing']\");\n    if (!sizingEl)\n      return null;\n    var sp = JSON.parse(sizingEl.textContent || sizingEl.text || \"{}\");\n    if (viewerMode) {\n      return sp.viewer;\n    } else {\n      return sp.browser;\n    }\n  }\n\n  // @param tasks Array of strings (or falsy value, in which case no-op).\n  //   Each element must be a valid JavaScript expression that yields a\n  //   function. Or, can be an array of objects with \"code\" and \"data\"\n  //   properties; in this case, the \"code\" property should be a string\n  //   of JS that's an expr that yields a function, and \"data\" should be\n  //   an object that will be added as an additional argument when that\n  //   function is called.\n  // @param target The object that will be \"this\" for each function\n  //   execution.\n  // @param args Array of arguments to be passed to the functions. (The\n  //   same arguments will be passed to all functions.)\n  function evalAndRun(tasks, target, args) {\n    if (tasks) {\n      forEach(tasks, function(task) {\n        var theseArgs = args;\n        if (typeof(task) === \"object\") {\n          theseArgs = theseArgs.concat([task.data]);\n          task = task.code;\n        }\n        var taskFunc = tryEval(task);\n        if (typeof(taskFunc) !== \"function\") {\n          throw new Error(\"Task must be a function! Source:\\n\" + task);\n        }\n        taskFunc.apply(target, theseArgs);\n      });\n    }\n  }\n\n  // Attempt eval() both with and without enclosing in parentheses.\n  // Note that enclosing coerces a function declaration into\n  // an expression that eval() can parse\n  // (otherwise, a SyntaxError is thrown)\n  function tryEval(code) {\n    var result = null;\n    try {\n      result = eval(code);\n    } catch(error) {\n      if (!error instanceof SyntaxError) {\n        throw error;\n      }\n      try {\n        result = eval(\"(\" + code + \")\");\n      } catch(e) {\n        if (e instanceof SyntaxError) {\n          throw error;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return result;\n  }\n\n  function initSizing(el) {\n    var sizing = sizingPolicy(el);\n    if (!sizing)\n      return;\n\n    var cel = document.getElementById(\"htmlwidget_container\");\n    if (!cel)\n      return;\n\n    if (typeof(sizing.padding) !== \"undefined\") {\n      document.body.style.margin = \"0\";\n      document.body.style.padding = paddingToCss(unpackPadding(sizing.padding));\n    }\n\n    if (sizing.fill) {\n      document.body.style.overflow = \"hidden\";\n      document.body.style.width = \"100%\";\n      document.body.style.height = \"100%\";\n      document.documentElement.style.width = \"100%\";\n      document.documentElement.style.height = \"100%\";\n      if (cel) {\n        cel.style.position = \"absolute\";\n        var pad = unpackPadding(sizing.padding);\n        cel.style.top = pad.top + \"px\";\n        cel.style.right = pad.right + \"px\";\n        cel.style.bottom = pad.bottom + \"px\";\n        cel.style.left = pad.left + \"px\";\n        el.style.width = \"100%\";\n        el.style.height = \"100%\";\n      }\n\n      return {\n        getWidth: function() { return cel.offsetWidth; },\n        getHeight: function() { return cel.offsetHeight; }\n      };\n\n    } else {\n      el.style.width = px(sizing.width);\n      el.style.height = px(sizing.height);\n\n      return {\n        getWidth: function() { return el.offsetWidth; },\n        getHeight: function() { return el.offsetHeight; }\n      };\n    }\n  }\n\n  // Default implementations for methods\n  var defaults = {\n    find: function(scope) {\n      return querySelectorAll(scope, \".\" + this.name);\n    },\n    renderError: function(el, err) {\n      var $el = $(el);\n\n      this.clearError(el);\n\n      // Add all these error classes, as Shiny does\n      var errClass = \"shiny-output-error\";\n      if (err.type !== null) {\n        // use the classes of the error condition as CSS class names\n        errClass = errClass + \" \" + $.map(asArray(err.type), function(type) {\n          return errClass + \"-\" + type;\n        }).join(\" \");\n      }\n      errClass = errClass + \" htmlwidgets-error\";\n\n      // Is el inline or block? If inline or inline-block, just display:none it\n      // and add an inline error.\n      var display = $el.css(\"display\");\n      $el.data(\"restore-display-mode\", display);\n\n      if (display === \"inline\" || display === \"inline-block\") {\n        $el.hide();\n        if (err.message !== \"\") {\n          var errorSpan = $(\"<span>\").addClass(errClass);\n          errorSpan.text(err.message);\n          $el.after(errorSpan);\n        }\n      } else if (display === \"block\") {\n        // If block, add an error just after the el, set visibility:none on the\n        // el, and position the error to be on top of the el.\n        // Mark it with a unique ID and CSS class so we can remove it later.\n        $el.css(\"visibility\", \"hidden\");\n        if (err.message !== \"\") {\n          var errorDiv = $(\"<div>\").addClass(errClass).css(\"position\", \"absolute\")\n            .css(\"top\", el.offsetTop)\n            .css(\"left\", el.offsetLeft)\n            // setting width can push out the page size, forcing otherwise\n            // unnecessary scrollbars to appear and making it impossible for\n            // the element to shrink; so use max-width instead\n            .css(\"maxWidth\", el.offsetWidth)\n            .css(\"height\", el.offsetHeight);\n          errorDiv.text(err.message);\n          $el.after(errorDiv);\n\n          // Really dumb way to keep the size/position of the error in sync with\n          // the parent element as the window is resized or whatever.\n          var intId = setInterval(function() {\n            if (!errorDiv[0].parentElement) {\n              clearInterval(intId);\n              return;\n            }\n            errorDiv\n              .css(\"top\", el.offsetTop)\n              .css(\"left\", el.offsetLeft)\n              .css(\"maxWidth\", el.offsetWidth)\n              .css(\"height\", el.offsetHeight);\n          }, 500);\n        }\n      }\n    },\n    clearError: function(el) {\n      var $el = $(el);\n      var display = $el.data(\"restore-display-mode\");\n      $el.data(\"restore-display-mode\", null);\n\n      if (display === \"inline\" || display === \"inline-block\") {\n        if (display)\n          $el.css(\"display\", display);\n        $(el.nextSibling).filter(\".htmlwidgets-error\").remove();\n      } else if (display === \"block\"){\n        $el.css(\"visibility\", \"inherit\");\n        $(el.nextSibling).filter(\".htmlwidgets-error\").remove();\n      }\n    },\n    sizing: {}\n  };\n\n  // Called by widget bindings to register a new type of widget. The definition\n  // object can contain the following properties:\n  // - name (required) - A string indicating the binding name, which will be\n  //   used by default as the CSS classname to look for.\n  // - initialize (optional) - A function(el) that will be called once per\n  //   widget element; if a value is returned, it will be passed as the third\n  //   value to renderValue.\n  // - renderValue (required) - A function(el, data, initValue) that will be\n  //   called with data. Static contexts will cause this to be called once per\n  //   element; Shiny apps will cause this to be called multiple times per\n  //   element, as the data changes.\n  window.HTMLWidgets.widget = function(definition) {\n    if (!definition.name) {\n      throw new Error(\"Widget must have a name\");\n    }\n    if (!definition.type) {\n      throw new Error(\"Widget must have a type\");\n    }\n    // Currently we only support output widgets\n    if (definition.type !== \"output\") {\n      throw new Error(\"Unrecognized widget type '\" + definition.type + \"'\");\n    }\n    // TODO: Verify that .name is a valid CSS classname\n\n    // Support new-style instance-bound definitions. Old-style class-bound\n    // definitions have one widget \"object\" per widget per type/class of\n    // widget; the renderValue and resize methods on such widget objects\n    // take el and instance arguments, because the widget object can't\n    // store them. New-style instance-bound definitions have one widget\n    // object per widget instance; the definition that's passed in doesn't\n    // provide renderValue or resize methods at all, just the single method\n    //   factory(el, width, height)\n    // which returns an object that has renderValue(x) and resize(w, h).\n    // This enables a far more natural programming style for the widget\n    // author, who can store per-instance state using either OO-style\n    // instance fields or functional-style closure variables (I guess this\n    // is in contrast to what can only be called C-style pseudo-OO which is\n    // what we required before).\n    if (definition.factory) {\n      definition = createLegacyDefinitionAdapter(definition);\n    }\n\n    if (!definition.renderValue) {\n      throw new Error(\"Widget must have a renderValue function\");\n    }\n\n    // For static rendering (non-Shiny), use a simple widget registration\n    // scheme. We also use this scheme for Shiny apps/documents that also\n    // contain static widgets.\n    window.HTMLWidgets.widgets = window.HTMLWidgets.widgets || [];\n    // Merge defaults into the definition; don't mutate the original definition.\n    var staticBinding = extend({}, defaults, definition);\n    overrideMethod(staticBinding, \"find\", function(superfunc) {\n      return function(scope) {\n        var results = superfunc(scope);\n        // Filter out Shiny outputs, we only want the static kind\n        return filterByClass(results, \"html-widget-output\", false);\n      };\n    });\n    window.HTMLWidgets.widgets.push(staticBinding);\n\n    if (shinyMode) {\n      // Shiny is running. Register the definition with an output binding.\n      // The definition itself will not be the output binding, instead\n      // we will make an output binding object that delegates to the\n      // definition. This is because we foolishly used the same method\n      // name (renderValue) for htmlwidgets definition and Shiny bindings\n      // but they actually have quite different semantics (the Shiny\n      // bindings receive data that includes lots of metadata that it\n      // strips off before calling htmlwidgets renderValue). We can't\n      // just ignore the difference because in some widgets it's helpful\n      // to call this.renderValue() from inside of resize(), and if\n      // we're not delegating, then that call will go to the Shiny\n      // version instead of the htmlwidgets version.\n\n      // Merge defaults with definition, without mutating either.\n      var bindingDef = extend({}, defaults, definition);\n\n      // This object will be our actual Shiny binding.\n      var shinyBinding = new Shiny.OutputBinding();\n\n      // With a few exceptions, we'll want to simply use the bindingDef's\n      // version of methods if they are available, otherwise fall back to\n      // Shiny's defaults. NOTE: If Shiny's output bindings gain additional\n      // methods in the future, and we want them to be overrideable by\n      // HTMLWidget binding definitions, then we'll need to add them to this\n      // list.\n      delegateMethod(shinyBinding, bindingDef, \"getId\");\n      delegateMethod(shinyBinding, bindingDef, \"onValueChange\");\n      delegateMethod(shinyBinding, bindingDef, \"onValueError\");\n      delegateMethod(shinyBinding, bindingDef, \"renderError\");\n      delegateMethod(shinyBinding, bindingDef, \"clearError\");\n      delegateMethod(shinyBinding, bindingDef, \"showProgress\");\n\n      // The find, renderValue, and resize are handled differently, because we\n      // want to actually decorate the behavior of the bindingDef methods.\n\n      shinyBinding.find = function(scope) {\n        var results = bindingDef.find(scope);\n\n        // Only return elements that are Shiny outputs, not static ones\n        var dynamicResults = results.filter(\".html-widget-output\");\n\n        // It's possible that whatever caused Shiny to think there might be\n        // new dynamic outputs, also caused there to be new static outputs.\n        // Since there might be lots of different htmlwidgets bindings, we\n        // schedule execution for later--no need to staticRender multiple\n        // times.\n        if (results.length !== dynamicResults.length)\n          scheduleStaticRender();\n\n        return dynamicResults;\n      };\n\n      // Wrap renderValue to handle initialization, which unfortunately isn't\n      // supported natively by Shiny at the time of this writing.\n\n      shinyBinding.renderValue = function(el, data) {\n        Shiny.renderDependencies(data.deps);\n        // Resolve strings marked as javascript literals to objects\n        if (!(data.evals instanceof Array)) data.evals = [data.evals];\n        for (var i = 0; data.evals && i < data.evals.length; i++) {\n          window.HTMLWidgets.evaluateStringMember(data.x, data.evals[i]);\n        }\n        if (!bindingDef.renderOnNullValue) {\n          if (data.x === null) {\n            el.style.visibility = \"hidden\";\n            return;\n          } else {\n            el.style.visibility = \"inherit\";\n          }\n        }\n        if (!elementData(el, \"initialized\")) {\n          initSizing(el);\n\n          elementData(el, \"initialized\", true);\n          if (bindingDef.initialize) {\n            var result = bindingDef.initialize(el, el.offsetWidth,\n              el.offsetHeight);\n            elementData(el, \"init_result\", result);\n          }\n        }\n        bindingDef.renderValue(el, data.x, elementData(el, \"init_result\"));\n        evalAndRun(data.jsHooks.render, elementData(el, \"init_result\"), [el, data.x]);\n      };\n\n      // Only override resize if bindingDef implements it\n      if (bindingDef.resize) {\n        shinyBinding.resize = function(el, width, height) {\n          // Shiny can call resize before initialize/renderValue have been\n          // called, which doesn't make sense for widgets.\n          if (elementData(el, \"initialized\")) {\n            bindingDef.resize(el, width, height, elementData(el, \"init_result\"));\n          }\n        };\n      }\n\n      Shiny.outputBindings.register(shinyBinding, bindingDef.name);\n    }\n  };\n\n  var scheduleStaticRenderTimerId = null;\n  function scheduleStaticRender() {\n    if (!scheduleStaticRenderTimerId) {\n      scheduleStaticRenderTimerId = setTimeout(function() {\n        scheduleStaticRenderTimerId = null;\n        window.HTMLWidgets.staticRender();\n      }, 1);\n    }\n  }\n\n  // Render static widgets after the document finishes loading\n  // Statically render all elements that are of this widget's class\n  window.HTMLWidgets.staticRender = function() {\n    var bindings = window.HTMLWidgets.widgets || [];\n    forEach(bindings, function(binding) {\n      var matches = binding.find(document.documentElement);\n      forEach(matches, function(el) {\n        var sizeObj = initSizing(el, binding);\n\n        if (hasClass(el, \"html-widget-static-bound\"))\n          return;\n        el.className = el.className + \" html-widget-static-bound\";\n\n        var initResult;\n        if (binding.initialize) {\n          initResult = binding.initialize(el,\n            sizeObj ? sizeObj.getWidth() : el.offsetWidth,\n            sizeObj ? sizeObj.getHeight() : el.offsetHeight\n          );\n          elementData(el, \"init_result\", initResult);\n        }\n\n        if (binding.resize) {\n          var lastSize = {\n            w: sizeObj ? sizeObj.getWidth() : el.offsetWidth,\n            h: sizeObj ? sizeObj.getHeight() : el.offsetHeight\n          };\n          var resizeHandler = function(e) {\n            var size = {\n              w: sizeObj ? sizeObj.getWidth() : el.offsetWidth,\n              h: sizeObj ? sizeObj.getHeight() : el.offsetHeight\n            };\n            if (size.w === 0 && size.h === 0)\n              return;\n            if (size.w === lastSize.w && size.h === lastSize.h)\n              return;\n            lastSize = size;\n            binding.resize(el, size.w, size.h, initResult);\n          };\n\n          on(window, \"resize\", resizeHandler);\n\n          // This is needed for cases where we're running in a Shiny\n          // app, but the widget itself is not a Shiny output, but\n          // rather a simple static widget. One example of this is\n          // an rmarkdown document that has runtime:shiny and widget\n          // that isn't in a render function. Shiny only knows to\n          // call resize handlers for Shiny outputs, not for static\n          // widgets, so we do it ourselves.\n          if (window.jQuery) {\n            window.jQuery(document).on(\n              \"shown.htmlwidgets shown.bs.tab.htmlwidgets shown.bs.collapse.htmlwidgets\",\n              resizeHandler\n            );\n            window.jQuery(document).on(\n              \"hidden.htmlwidgets hidden.bs.tab.htmlwidgets hidden.bs.collapse.htmlwidgets\",\n              resizeHandler\n            );\n          }\n\n          // This is needed for the specific case of ioslides, which\n          // flips slides between display:none and display:block.\n          // Ideally we would not have to have ioslide-specific code\n          // here, but rather have ioslides raise a generic event,\n          // but the rmarkdown package just went to CRAN so the\n          // window to getting that fixed may be long.\n          if (window.addEventListener) {\n            // It's OK to limit this to window.addEventListener\n            // browsers because ioslides itself only supports\n            // such browsers.\n            on(document, \"slideenter\", resizeHandler);\n            on(document, \"slideleave\", resizeHandler);\n          }\n        }\n\n        var scriptData = document.querySelector(\"script[data-for='\" + el.id + \"'][type='application/json']\");\n        if (scriptData) {\n          var data = JSON.parse(scriptData.textContent || scriptData.text);\n          // Resolve strings marked as javascript literals to objects\n          if (!(data.evals instanceof Array)) data.evals = [data.evals];\n          for (var k = 0; data.evals && k < data.evals.length; k++) {\n            window.HTMLWidgets.evaluateStringMember(data.x, data.evals[k]);\n          }\n          binding.renderValue(el, data.x, initResult);\n          evalAndRun(data.jsHooks.render, initResult, [el, data.x]);\n        }\n      });\n    });\n\n    invokePostRenderHandlers();\n  }\n\n\n  function has_jQuery3() {\n    if (!window.jQuery) {\n      return false;\n    }\n    var $version = window.jQuery.fn.jquery;\n    var $major_version = parseInt($version.split(\".\")[0]);\n    return $major_version >= 3;\n  }\n\n  /*\n  / Shiny 1.4 bumped jQuery from 1.x to 3.x which means jQuery's\n  / on-ready handler (i.e., $(fn)) is now asyncronous (i.e., it now\n  / really means $(setTimeout(fn)).\n  / https://jquery.com/upgrade-guide/3.0/#breaking-change-document-ready-handlers-are-now-asynchronous\n  /\n  / Since Shiny uses $() to schedule initShiny, shiny>=1.4 calls initShiny\n  / one tick later than it did before, which means staticRender() is\n  / called renderValue() earlier than (advanced) widget authors might be expecting.\n  / https://github.com/rstudio/shiny/issues/2630\n  /\n  / For a concrete example, leaflet has some methods (e.g., updateBounds)\n  / which reference Shiny methods registered in initShiny (e.g., setInputValue).\n  / Since leaflet is privy to this life-cycle, it knows to use setTimeout() to\n  / delay execution of those methods (until Shiny methods are ready)\n  / https://github.com/rstudio/leaflet/blob/18ec981/javascript/src/index.js#L266-L268\n  /\n  / Ideally widget authors wouldn't need to use this setTimeout() hack that\n  / leaflet uses to call Shiny methods on a staticRender(). In the long run,\n  / the logic initShiny should be broken up so that method registration happens\n  / right away, but binding happens later.\n  */\n  function maybeStaticRenderLater() {\n    if (shinyMode && has_jQuery3()) {\n      window.jQuery(window.HTMLWidgets.staticRender);\n    } else {\n      window.HTMLWidgets.staticRender();\n    }\n  }\n\n  if (document.addEventListener) {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      document.removeEventListener(\"DOMContentLoaded\", arguments.callee, false);\n      maybeStaticRenderLater();\n    }, false);\n  } else if (document.attachEvent) {\n    document.attachEvent(\"onreadystatechange\", function() {\n      if (document.readyState === \"complete\") {\n        document.detachEvent(\"onreadystatechange\", arguments.callee);\n        maybeStaticRenderLater();\n      }\n    });\n  }\n\n\n  window.HTMLWidgets.getAttachmentUrl = function(depname, key) {\n    // If no key, default to the first item\n    if (typeof(key) === \"undefined\")\n      key = 1;\n\n    var link = document.getElementById(depname + \"-\" + key + \"-attachment\");\n    if (!link) {\n      throw new Error(\"Attachment \" + depname + \"/\" + key + \" not found in document\");\n    }\n    return link.getAttribute(\"href\");\n  };\n\n  window.HTMLWidgets.dataframeToD3 = function(df) {\n    var names = [];\n    var length;\n    for (var name in df) {\n        if (df.hasOwnProperty(name))\n            names.push(name);\n        if (typeof(df[name]) !== \"object\" || typeof(df[name].length) === \"undefined\") {\n            throw new Error(\"All fields must be arrays\");\n        } else if (typeof(length) !== \"undefined\" && length !== df[name].length) {\n            throw new Error(\"All fields must be arrays of the same length\");\n        }\n        length = df[name].length;\n    }\n    var results = [];\n    var item;\n    for (var row = 0; row < length; row++) {\n        item = {};\n        for (var col = 0; col < names.length; col++) {\n            item[names[col]] = df[names[col]][row];\n        }\n        results.push(item);\n    }\n    return results;\n  };\n\n  window.HTMLWidgets.transposeArray2D = function(array) {\n      if (array.length === 0) return array;\n      var newArray = array[0].map(function(col, i) {\n          return array.map(function(row) {\n              return row[i]\n          })\n      });\n      return newArray;\n  };\n  // Split value at splitChar, but allow splitChar to be escaped\n  // using escapeChar. Any other characters escaped by escapeChar\n  // will be included as usual (including escapeChar itself).\n  function splitWithEscape(value, splitChar, escapeChar) {\n    var results = [];\n    var escapeMode = false;\n    var currentResult = \"\";\n    for (var pos = 0; pos < value.length; pos++) {\n      if (!escapeMode) {\n        if (value[pos] === splitChar) {\n          results.push(currentResult);\n          currentResult = \"\";\n        } else if (value[pos] === escapeChar) {\n          escapeMode = true;\n        } else {\n          currentResult += value[pos];\n        }\n      } else {\n        currentResult += value[pos];\n        escapeMode = false;\n      }\n    }\n    if (currentResult !== \"\") {\n      results.push(currentResult);\n    }\n    return results;\n  }\n  // Function authored by Yihui/JJ Allaire\n  window.HTMLWidgets.evaluateStringMember = function(o, member) {\n    var parts = splitWithEscape(member, '.', '\\\\');\n    for (var i = 0, l = parts.length; i < l; i++) {\n      var part = parts[i];\n      // part may be a character or 'numeric' member name\n      if (o !== null && typeof o === \"object\" && part in o) {\n        if (i == (l - 1)) { // if we are at the end of the line then evalulate\n          if (typeof o[part] === \"string\")\n            o[part] = tryEval(o[part]);\n        } else { // otherwise continue to next embedded object\n          o = o[part];\n        }\n      }\n    }\n  };\n\n  // Retrieve the HTMLWidget instance (i.e. the return value of an\n  // HTMLWidget binding's initialize() or factory() function)\n  // associated with an element, or null if none.\n  window.HTMLWidgets.getInstance = function(el) {\n    return elementData(el, \"init_result\");\n  };\n\n  // Finds the first element in the scope that matches the selector,\n  // and returns the HTMLWidget instance (i.e. the return value of\n  // an HTMLWidget binding's initialize() or factory() function)\n  // associated with that element, if any. If no element matches the\n  // selector, or the first matching element has no HTMLWidget\n  // instance associated with it, then null is returned.\n  //\n  // The scope argument is optional, and defaults to window.document.\n  window.HTMLWidgets.find = function(scope, selector) {\n    if (arguments.length == 1) {\n      selector = scope;\n      scope = document;\n    }\n\n    var el = scope.querySelector(selector);\n    if (el === null) {\n      return null;\n    } else {\n      return window.HTMLWidgets.getInstance(el);\n    }\n  };\n\n  // Finds all elements in the scope that match the selector, and\n  // returns the HTMLWidget instances (i.e. the return values of\n  // an HTMLWidget binding's initialize() or factory() function)\n  // associated with the elements, in an array. If elements that\n  // match the selector don't have an associated HTMLWidget\n  // instance, the returned array will contain nulls.\n  //\n  // The scope argument is optional, and defaults to window.document.\n  window.HTMLWidgets.findAll = function(scope, selector) {\n    if (arguments.length == 1) {\n      selector = scope;\n      scope = document;\n    }\n\n    var nodes = scope.querySelectorAll(selector);\n    var results = [];\n    for (var i = 0; i < nodes.length; i++) {\n      results.push(window.HTMLWidgets.getInstance(nodes[i]));\n    }\n    return results;\n  };\n\n  var postRenderHandlers = [];\n  function invokePostRenderHandlers() {\n    while (postRenderHandlers.length) {\n      var handler = postRenderHandlers.shift();\n      if (handler) {\n        handler();\n      }\n    }\n  }\n\n  // Register the given callback function to be invoked after the\n  // next time static widgets are rendered.\n  window.HTMLWidgets.addPostRenderHandler = function(callback) {\n    postRenderHandlers.push(callback);\n  };\n\n  // Takes a new-style instance-bound definition, and returns an\n  // old-style class-bound definition. This saves us from having\n  // to rewrite all the logic in this file to accomodate both\n  // types of definitions.\n  function createLegacyDefinitionAdapter(defn) {\n    var result = {\n      name: defn.name,\n      type: defn.type,\n      initialize: function(el, width, height) {\n        return defn.factory(el, width, height);\n      },\n      renderValue: function(el, x, instance) {\n        return instance.renderValue(x);\n      },\n      resize: function(el, width, height, instance) {\n        return instance.resize(width, height);\n      }\n    };\n\n    if (defn.find)\n      result.find = defn.find;\n    if (defn.renderError)\n      result.renderError = defn.renderError;\n    if (defn.clearError)\n      result.clearError = defn.clearError;\n\n    return result;\n  }\n})();\n\n</script>"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/search-project.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "<a><i class=\"fa fa-bars\"></i></a>"
						}
					],
					"count": "10",
					"solution": "<p>This is an informational alert and so no changes are required.</p>",
					"otherinfo": "<p>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</p>",
					"reference": "",
					"cweid": "-1",
					"wascid": "-1",
					"sourceid": "3"
				},
				{
					"pluginid": "10049",
					"alertRef": "10049",
					"alert": "Storable and Cacheable Content",
					"name": "Storable and Cacheable Content",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users.  If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.</p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/img/favicon.ico",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=604800"
						},
						{
							"uri": "https://parisregion.eu/img/favicon.png",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=604800"
						},
						{
							"uri": "https://parisregion.eu/robots.txt",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						},
						{
							"uri": "https://parisregion.eu/sitemap.xml",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": ""
						}
					],
					"count": "4",
					"solution": "<p>Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:</p><p>Cache-Control: no-cache, no-store, must-revalidate, private</p><p>Pragma: no-cache</p><p>Expires: 0</p><p>This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request. </p>",
					"otherinfo": "",
					"reference": "<p>https://tools.ietf.org/html/rfc7234</p><p>https://tools.ietf.org/html/rfc7231</p><p>http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)</p>",
					"cweid": "524",
					"wascid": "13",
					"sourceid": "136"
				},
				{
					"pluginid": "10049",
					"alertRef": "10049",
					"alert": "Storable but Non-Cacheable Content",
					"name": "Storable but Non-Cacheable Content",
					"riskcode": "0",
					"confidence": "2",
					"riskdesc": "Informational (Medium)",
					"desc": "<p>The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users. </p>",
					"instances":[ 
						{
							"uri": "https://parisregion.eu/",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/discover.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/news.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/parisregionfp.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/sitemap.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						},
						{
							"uri": "https://parisregion.eu/study-research.html",
							"method": "GET",
							"param": "",
							"attack": "",
							"evidence": "max-age=0"
						}
					],
					"count": "6",
					"solution": "",
					"otherinfo": "",
					"reference": "<p>https://tools.ietf.org/html/rfc7234</p><p>https://tools.ietf.org/html/rfc7231</p><p>http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)</p>",
					"cweid": "524",
					"wascid": "13",
					"sourceid": "3"
				}
			]
		}
	]
}
